// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.5
// source: pkg/serverpb/admin.proto

package serverpb

import (
	models "github.com/flipkart-incubator/nexus/models"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegionStatus int32

const (
	// A node in this status isn't supposed to be serving any requests - both for clients and servers (slaves)
	// When committed entry of master - node > X, node being brought up / down, node is partitioned from cluster, etc
	// Applicable for both slaves and members of raft quorum.
	RegionStatus_INACTIVE RegionStatus = 0
	// Master of the raft quorum - 1 node within the shard
	RegionStatus_LEADER RegionStatus = 1
	// Member of the raft quorum which is elected to serve sequentially consistent reads within the DC
	// 1 node within a shard in a DC
	RegionStatus_PRIMARY_FOLLOWER RegionStatus = 2
	// All other members of the raft quorum which are not master / primary follower.
	// Serving eventually consistent reads
	RegionStatus_SECONDARY_FOLLOWER RegionStatus = 3
	// Slave with committed entry within some bound of its master and able to serve read requests
	RegionStatus_ACTIVE_SLAVE RegionStatus = 4
)

// Enum value maps for RegionStatus.
var (
	RegionStatus_name = map[int32]string{
		0: "INACTIVE",
		1: "LEADER",
		2: "PRIMARY_FOLLOWER",
		3: "SECONDARY_FOLLOWER",
		4: "ACTIVE_SLAVE",
	}
	RegionStatus_value = map[string]int32{
		"INACTIVE":           0,
		"LEADER":             1,
		"PRIMARY_FOLLOWER":   2,
		"SECONDARY_FOLLOWER": 3,
		"ACTIVE_SLAVE":       4,
	}
)

func (x RegionStatus) Enum() *RegionStatus {
	p := new(RegionStatus)
	*p = x
	return p
}

func (x RegionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_serverpb_admin_proto_enumTypes[0].Descriptor()
}

func (RegionStatus) Type() protoreflect.EnumType {
	return &file_pkg_serverpb_admin_proto_enumTypes[0]
}

func (x RegionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegionStatus.Descriptor instead.
func (RegionStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_serverpb_admin_proto_rawDescGZIP(), []int{0}
}

type TrxnRecord_TrxnType int32

const (
	TrxnRecord_Unknown TrxnRecord_TrxnType = 0
	TrxnRecord_Put     TrxnRecord_TrxnType = 1
	TrxnRecord_Delete  TrxnRecord_TrxnType = 2
)

// Enum value maps for TrxnRecord_TrxnType.
var (
	TrxnRecord_TrxnType_name = map[int32]string{
		0: "Unknown",
		1: "Put",
		2: "Delete",
	}
	TrxnRecord_TrxnType_value = map[string]int32{
		"Unknown": 0,
		"Put":     1,
		"Delete":  2,
	}
)

func (x TrxnRecord_TrxnType) Enum() *TrxnRecord_TrxnType {
	p := new(TrxnRecord_TrxnType)
	*p = x
	return p
}

func (x TrxnRecord_TrxnType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrxnRecord_TrxnType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_serverpb_admin_proto_enumTypes[1].Descriptor()
}

func (TrxnRecord_TrxnType) Type() protoreflect.EnumType {
	return &file_pkg_serverpb_admin_proto_enumTypes[1]
}

func (x TrxnRecord_TrxnType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrxnRecord_TrxnType.Descriptor instead.
func (TrxnRecord_TrxnType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_serverpb_admin_proto_rawDescGZIP(), []int{6, 0}
}

type GetReplicasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Zone identifier to use for looking up replicas of the current master.
	Zone string `protobuf:"bytes,1,opt,name=zone,proto3" json:"zone,omitempty"`
}

func (x *GetReplicasRequest) Reset() {
	*x = GetReplicasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_serverpb_admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReplicasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplicasRequest) ProtoMessage() {}

func (x *GetReplicasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_serverpb_admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplicasRequest.ProtoReflect.Descriptor instead.
func (*GetReplicasRequest) Descriptor() ([]byte, []int) {
	return file_pkg_serverpb_admin_proto_rawDescGZIP(), []int{0}
}

func (x *GetReplicasRequest) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

type GetReplicasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Replicas are all the replicas of the current master.
	Replicas []*Replica `protobuf:"bytes,1,rep,name=replicas,proto3" json:"replicas,omitempty"`
}

func (x *GetReplicasResponse) Reset() {
	*x = GetReplicasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_serverpb_admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReplicasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplicasResponse) ProtoMessage() {}

func (x *GetReplicasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_serverpb_admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplicasResponse.ProtoReflect.Descriptor instead.
func (*GetReplicasResponse) Descriptor() ([]byte, []int) {
	return file_pkg_serverpb_admin_proto_rawDescGZIP(), []int{1}
}

func (x *GetReplicasResponse) GetReplicas() []*Replica {
	if x != nil {
		return x.Replicas
	}
	return nil
}

type Replica struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Zone identifier of the replica.
	Zone string `protobuf:"bytes,1,opt,name=zone,proto3" json:"zone,omitempty"`
	// Hostname of the replica.
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// GRPC port of the replica.
	Port uint32 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *Replica) Reset() {
	*x = Replica{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_serverpb_admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Replica) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Replica) ProtoMessage() {}

func (x *Replica) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_serverpb_admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Replica.ProtoReflect.Descriptor instead.
func (*Replica) Descriptor() ([]byte, []int) {
	return file_pkg_serverpb_admin_proto_rawDescGZIP(), []int{2}
}

func (x *Replica) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *Replica) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Replica) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type GetChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// FromChangeNumber is the starting change number from which to retrieve changes.
	FromChangeNumber uint64 `protobuf:"varint,1,opt,name=fromChangeNumber,proto3" json:"fromChangeNumber,omitempty"`
	// MaxNumberOfChanges is the maximum number of changes to return from this invocation.
	MaxNumberOfChanges uint32 `protobuf:"varint,2,opt,name=maxNumberOfChanges,proto3" json:"maxNumberOfChanges,omitempty"`
}

func (x *GetChangesRequest) Reset() {
	*x = GetChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_serverpb_admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChangesRequest) ProtoMessage() {}

func (x *GetChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_serverpb_admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChangesRequest.ProtoReflect.Descriptor instead.
func (*GetChangesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_serverpb_admin_proto_rawDescGZIP(), []int{3}
}

func (x *GetChangesRequest) GetFromChangeNumber() uint64 {
	if x != nil {
		return x.FromChangeNumber
	}
	return 0
}

func (x *GetChangesRequest) GetMaxNumberOfChanges() uint32 {
	if x != nil {
		return x.MaxNumberOfChanges
	}
	return 0
}

type GetChangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status indicates the result of the GetChanges operation.
	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// MasterChangeNumber indicates the latest change number on master node.
	MasterChangeNumber uint64 `protobuf:"varint,2,opt,name=masterChangeNumber,proto3" json:"masterChangeNumber,omitempty"`
	// NumberOfChanges indicates the number of change records in the response.
	NumberOfChanges uint32 `protobuf:"varint,3,opt,name=numberOfChanges,proto3" json:"numberOfChanges,omitempty"`
	// Changes is the collection of change records.
	Changes []*ChangeRecord `protobuf:"bytes,4,rep,name=changes,proto3" json:"changes,omitempty"`
}

func (x *GetChangesResponse) Reset() {
	*x = GetChangesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_serverpb_admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChangesResponse) ProtoMessage() {}

func (x *GetChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_serverpb_admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChangesResponse.ProtoReflect.Descriptor instead.
func (*GetChangesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_serverpb_admin_proto_rawDescGZIP(), []int{4}
}

func (x *GetChangesResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetChangesResponse) GetMasterChangeNumber() uint64 {
	if x != nil {
		return x.MasterChangeNumber
	}
	return 0
}

func (x *GetChangesResponse) GetNumberOfChanges() uint32 {
	if x != nil {
		return x.NumberOfChanges
	}
	return 0
}

func (x *GetChangesResponse) GetChanges() []*ChangeRecord {
	if x != nil {
		return x.Changes
	}
	return nil
}

type ChangeRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SerialisedForm is the internal byte array representation of this change record.
	SerialisedForm []byte `protobuf:"bytes,1,opt,name=serialisedForm,proto3" json:"serialisedForm,omitempty"`
	// ChangeNumber indicates the change number of this change record.
	ChangeNumber uint64 `protobuf:"varint,2,opt,name=changeNumber,proto3" json:"changeNumber,omitempty"`
	// NumberOfTrxns indicates the number of transactions associated with this change record.
	NumberOfTrxns uint32 `protobuf:"varint,3,opt,name=numberOfTrxns,proto3" json:"numberOfTrxns,omitempty"`
	// Trxns is the collection of transaction records associated with this change record.
	Trxns []*TrxnRecord `protobuf:"bytes,4,rep,name=trxns,proto3" json:"trxns,omitempty"`
}

func (x *ChangeRecord) Reset() {
	*x = ChangeRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_serverpb_admin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeRecord) ProtoMessage() {}

func (x *ChangeRecord) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_serverpb_admin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeRecord.ProtoReflect.Descriptor instead.
func (*ChangeRecord) Descriptor() ([]byte, []int) {
	return file_pkg_serverpb_admin_proto_rawDescGZIP(), []int{5}
}

func (x *ChangeRecord) GetSerialisedForm() []byte {
	if x != nil {
		return x.SerialisedForm
	}
	return nil
}

func (x *ChangeRecord) GetChangeNumber() uint64 {
	if x != nil {
		return x.ChangeNumber
	}
	return 0
}

func (x *ChangeRecord) GetNumberOfTrxns() uint32 {
	if x != nil {
		return x.NumberOfTrxns
	}
	return 0
}

func (x *ChangeRecord) GetTrxns() []*TrxnRecord {
	if x != nil {
		return x.Trxns
	}
	return nil
}

type TrxnRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type indicates the type of this transaction - Put, Delete, etc.
	Type TrxnRecord_TrxnType `protobuf:"varint,1,opt,name=type,proto3,enum=dkv.serverpb.TrxnRecord_TrxnType" json:"type,omitempty"`
	// Key is the byte array representation of the key associated with this transaction.
	Key []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Value is the byte array representation of the value associated with this transaction.
	Value []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// expireTS is the epoch seconds value, in int64 to associate with the key in the key value store.
	ExpireTS uint64 `protobuf:"varint,4,opt,name=expireTS,proto3" json:"expireTS,omitempty"`
}

func (x *TrxnRecord) Reset() {
	*x = TrxnRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_serverpb_admin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrxnRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrxnRecord) ProtoMessage() {}

func (x *TrxnRecord) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_serverpb_admin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrxnRecord.ProtoReflect.Descriptor instead.
func (*TrxnRecord) Descriptor() ([]byte, []int) {
	return file_pkg_serverpb_admin_proto_rawDescGZIP(), []int{6}
}

func (x *TrxnRecord) GetType() TrxnRecord_TrxnType {
	if x != nil {
		return x.Type
	}
	return TrxnRecord_Unknown
}

func (x *TrxnRecord) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *TrxnRecord) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TrxnRecord) GetExpireTS() uint64 {
	if x != nil {
		return x.ExpireTS
	}
	return 0
}

type BackupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// BackupPath indicates a filesystem folder or file used for backing up the keyspace.
	BackupPath string `protobuf:"bytes,1,opt,name=backupPath,proto3" json:"backupPath,omitempty"`
}

func (x *BackupRequest) Reset() {
	*x = BackupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_serverpb_admin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupRequest) ProtoMessage() {}

func (x *BackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_serverpb_admin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupRequest.ProtoReflect.Descriptor instead.
func (*BackupRequest) Descriptor() ([]byte, []int) {
	return file_pkg_serverpb_admin_proto_rawDescGZIP(), []int{7}
}

func (x *BackupRequest) GetBackupPath() string {
	if x != nil {
		return x.BackupPath
	}
	return ""
}

type RestoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// RestorePath indicates a filesystem folder or file used for restoring the keyspace.
	RestorePath string `protobuf:"bytes,1,opt,name=restorePath,proto3" json:"restorePath,omitempty"`
}

func (x *RestoreRequest) Reset() {
	*x = RestoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_serverpb_admin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreRequest) ProtoMessage() {}

func (x *RestoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_serverpb_admin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreRequest.ProtoReflect.Descriptor instead.
func (*RestoreRequest) Descriptor() ([]byte, []int) {
	return file_pkg_serverpb_admin_proto_rawDescGZIP(), []int{8}
}

func (x *RestoreRequest) GetRestorePath() string {
	if x != nil {
		return x.RestorePath
	}
	return ""
}

type ListNodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status indicates the status of the list nodes operation.
	Status *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Leader represents the identifier of the leader node.
	Leader uint64 `protobuf:"varint,2,opt,name=leader,proto3" json:"leader,omitempty"`
	// Nodes represents the members of the cluster identified by
	// their respective identifier and the Nexus URL.
	Nodes map[uint64]*models.NodeInfo `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ListNodesResponse) Reset() {
	*x = ListNodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_serverpb_admin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesResponse) ProtoMessage() {}

func (x *ListNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_serverpb_admin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesResponse.ProtoReflect.Descriptor instead.
func (*ListNodesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_serverpb_admin_proto_rawDescGZIP(), []int{9}
}

func (x *ListNodesResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ListNodesResponse) GetLeader() uint64 {
	if x != nil {
		return x.Leader
	}
	return 0
}

func (x *ListNodesResponse) GetNodes() map[uint64]*models.NodeInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type AddNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// NodeUrl represents the URL for the Nexus service running on
	// the node that needs to be added to the cluster. Other Nexus
	// peers communicate with this node on this service.
	NodeUrl string `protobuf:"bytes,1,opt,name=nodeUrl,proto3" json:"nodeUrl,omitempty"`
}

func (x *AddNodeRequest) Reset() {
	*x = AddNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_serverpb_admin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNodeRequest) ProtoMessage() {}

func (x *AddNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_serverpb_admin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNodeRequest.ProtoReflect.Descriptor instead.
func (*AddNodeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_serverpb_admin_proto_rawDescGZIP(), []int{10}
}

func (x *AddNodeRequest) GetNodeUrl() string {
	if x != nil {
		return x.NodeUrl
	}
	return ""
}

type RemoveNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// NodeUrl represents the URL for the Nexus service running on
	// the node that needs to be removed from the cluster.
	NodeUrl string `protobuf:"bytes,1,opt,name=nodeUrl,proto3" json:"nodeUrl,omitempty"`
}

func (x *RemoveNodeRequest) Reset() {
	*x = RemoveNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_serverpb_admin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNodeRequest) ProtoMessage() {}

func (x *RemoveNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_serverpb_admin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNodeRequest.ProtoReflect.Descriptor instead.
func (*RemoveNodeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_serverpb_admin_proto_rawDescGZIP(), []int{11}
}

func (x *RemoveNodeRequest) GetNodeUrl() string {
	if x != nil {
		return x.NodeUrl
	}
	return ""
}

type UpdateStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionInfo *RegionInfo `protobuf:"bytes,1,opt,name=regionInfo,proto3" json:"regionInfo,omitempty"`
	// Time at which the status was sent from the respective node
	Timestamp uint64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *UpdateStatusRequest) Reset() {
	*x = UpdateStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_serverpb_admin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusRequest) ProtoMessage() {}

func (x *UpdateStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_serverpb_admin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateStatusRequest) Descriptor() ([]byte, []int) {
	return file_pkg_serverpb_admin_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateStatusRequest) GetRegionInfo() *RegionInfo {
	if x != nil {
		return x.RegionInfo
	}
	return nil
}

func (x *UpdateStatusRequest) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Get cluster info filtered on request params
type GetClusterInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier of datacenter / availability zone
	DcID *string `protobuf:"bytes,1,opt,name=dcID,proto3,oneof" json:"dcID,omitempty"`
	// Database identifier
	Database *string `protobuf:"bytes,2,opt,name=database,proto3,oneof" json:"database,omitempty"`
	// Shard / vBucket identifier
	VBucket *string `protobuf:"bytes,3,opt,name=vBucket,proto3,oneof" json:"vBucket,omitempty"`
}

func (x *GetClusterInfoRequest) Reset() {
	*x = GetClusterInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_serverpb_admin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterInfoRequest) ProtoMessage() {}

func (x *GetClusterInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_serverpb_admin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterInfoRequest.ProtoReflect.Descriptor instead.
func (*GetClusterInfoRequest) Descriptor() ([]byte, []int) {
	return file_pkg_serverpb_admin_proto_rawDescGZIP(), []int{13}
}

func (x *GetClusterInfoRequest) GetDcID() string {
	if x != nil && x.DcID != nil {
		return *x.DcID
	}
	return ""
}

func (x *GetClusterInfoRequest) GetDatabase() string {
	if x != nil && x.Database != nil {
		return *x.Database
	}
	return ""
}

func (x *GetClusterInfoRequest) GetVBucket() string {
	if x != nil && x.VBucket != nil {
		return *x.VBucket
	}
	return ""
}

type GetClusterInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionInfos []*RegionInfo `protobuf:"bytes,1,rep,name=regionInfos,proto3" json:"regionInfos,omitempty"`
}

func (x *GetClusterInfoResponse) Reset() {
	*x = GetClusterInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_serverpb_admin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterInfoResponse) ProtoMessage() {}

func (x *GetClusterInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_serverpb_admin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterInfoResponse.ProtoReflect.Descriptor instead.
func (*GetClusterInfoResponse) Descriptor() ([]byte, []int) {
	return file_pkg_serverpb_admin_proto_rawDescGZIP(), []int{14}
}

func (x *GetClusterInfoResponse) GetRegionInfos() []*RegionInfo {
	if x != nil {
		return x.RegionInfos
	}
	return nil
}

type RegionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier of datacenter / availability zone
	// Slaves will prefer to select master within same dcId ,
	// Local DC followers will be created for every unique dcId
	DcID string `protobuf:"bytes,1,opt,name=dcID,proto3" json:"dcID,omitempty"`
	// Address to communicate with this node
	// Should be equal to listen-addr used for the node whose status is being updated
	NodeAddress string `protobuf:"bytes,2,opt,name=nodeAddress,proto3" json:"nodeAddress,omitempty"`
	// Database identifier
	Database string `protobuf:"bytes,3,opt,name=database,proto3" json:"database,omitempty"`
	// Shard / vBucket identifier
	VBucket string `protobuf:"bytes,4,opt,name=vBucket,proto3" json:"vBucket,omitempty"`
	// Status of the region
	Status RegionStatus `protobuf:"varint,5,opt,name=status,proto3,enum=dkv.serverpb.RegionStatus" json:"status,omitempty"`
	// Master host of the region whose status is being updated
	// Applicable only for slaves. Used to load balance among various possible masters
	MasterHost *string `protobuf:"bytes,6,opt,name=masterHost,proto3,oneof" json:"masterHost,omitempty"`
	// Nexus cluster url of the region
	// Will be used by new followers to discover the raft cluster
	NexusClusterUrl *string `protobuf:"bytes,7,opt,name=nexusClusterUrl,proto3,oneof" json:"nexusClusterUrl,omitempty"`
	// http listener of the node.
	// http endpoint is useful for admin API interactions
	HttpAddress string `protobuf:"bytes,8,opt,name=httpAddress,proto3" json:"httpAddress,omitempty"`
}

func (x *RegionInfo) Reset() {
	*x = RegionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_serverpb_admin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionInfo) ProtoMessage() {}

func (x *RegionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_serverpb_admin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionInfo.ProtoReflect.Descriptor instead.
func (*RegionInfo) Descriptor() ([]byte, []int) {
	return file_pkg_serverpb_admin_proto_rawDescGZIP(), []int{15}
}

func (x *RegionInfo) GetDcID() string {
	if x != nil {
		return x.DcID
	}
	return ""
}

func (x *RegionInfo) GetNodeAddress() string {
	if x != nil {
		return x.NodeAddress
	}
	return ""
}

func (x *RegionInfo) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *RegionInfo) GetVBucket() string {
	if x != nil {
		return x.VBucket
	}
	return ""
}

func (x *RegionInfo) GetStatus() RegionStatus {
	if x != nil {
		return x.Status
	}
	return RegionStatus_INACTIVE
}

func (x *RegionInfo) GetMasterHost() string {
	if x != nil && x.MasterHost != nil {
		return *x.MasterHost
	}
	return ""
}

func (x *RegionInfo) GetNexusClusterUrl() string {
	if x != nil && x.NexusClusterUrl != nil {
		return *x.NexusClusterUrl
	}
	return ""
}

func (x *RegionInfo) GetHttpAddress() string {
	if x != nil {
		return x.HttpAddress
	}
	return ""
}

var File_pkg_serverpb_admin_proto protoreflect.FileDescriptor

var file_pkg_serverpb_admin_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x64, 0x6b, 0x76, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x70, 0x62, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x28, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x48,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x6b, 0x76, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x52, 0x08,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x22, 0x4d, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x6f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10,
	0x66, 0x72, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x66, 0x72, 0x6f, 0x6d, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f,
	0x66, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x64, 0x6b, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a,
	0x12, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a,
	0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x6b, 0x76, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0xb0, 0x01,
	0x0a, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x26,
	0x0a, 0x0e, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x73,
	0x65, 0x64, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x54, 0x72, 0x78, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x54, 0x72, 0x78, 0x6e, 0x73,
	0x12, 0x2e, 0x0a, 0x05, 0x74, 0x72, 0x78, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x64, 0x6b, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x54,
	0x72, 0x78, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x05, 0x74, 0x72, 0x78, 0x6e, 0x73,
	0x22, 0xb5, 0x01, 0x0a, 0x0a, 0x54, 0x72, 0x78, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x35, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e,
	0x64, 0x6b, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x78,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x54, 0x72, 0x78, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x53, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x53, 0x22, 0x2c, 0x0a, 0x08, 0x54, 0x72,
	0x78, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x75, 0x74, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x02, 0x22, 0x2f, 0x0a, 0x0d, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x61, 0x74, 0x68, 0x22, 0x32, 0x0a, 0x0e, 0x52, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0xe7, 0x01,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x6b, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x6b, 0x76, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x1a, 0x4a, 0x0a, 0x0a, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2a, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x64,
	0x65, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65,
	0x55, 0x72, 0x6c, 0x22, 0x2d, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65,
	0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x55,
	0x72, 0x6c, 0x22, 0x6d, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0a, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x64, 0x6b, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x22, 0x92, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x64,
	0x63, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x64, 0x63, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x76, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x63, 0x49, 0x44, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x54, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3a, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x6b, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xc5, 0x02, 0x0a,
	0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x63, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x63, 0x49, 0x44, 0x12,
	0x20, 0x0a, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x64, 0x6b, 0x76, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0a, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x2d, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0f, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74,
	0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x55, 0x72, 0x6c, 0x2a, 0x68, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x01, 0x12, 0x14,
	0x0a, 0x10, 0x50, 0x52, 0x49, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x46, 0x4f, 0x4c, 0x4c, 0x4f, 0x57,
	0x45, 0x52, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x41, 0x52,
	0x59, 0x5f, 0x46, 0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x52, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x53, 0x4c, 0x41, 0x56, 0x45, 0x10, 0x04, 0x32, 0xae,
	0x02, 0x0a, 0x0e, 0x44, 0x4b, 0x56, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x4f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12,
	0x1f, 0x2e, 0x64, 0x6b, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x64, 0x6b, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x12, 0x15, 0x2e, 0x64, 0x6b, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x1a, 0x14, 0x2e, 0x64, 0x6b, 0x76, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a,
	0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x12, 0x15,
	0x2e, 0x64, 0x6b, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x1a, 0x14, 0x2e, 0x64, 0x6b, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x52, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x20, 0x2e, 0x64, 0x6b, 0x76,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64,
	0x6b, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0x8e, 0x01, 0x0a, 0x10, 0x44, 0x4b, 0x56, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x1b,
	0x2e, 0x64, 0x6b, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x6b,
	0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x3d, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x2e, 0x64,
	0x6b, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x6b, 0x76,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x32, 0xd6, 0x01, 0x0a, 0x0a, 0x44, 0x4b, 0x56, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x3d, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x2e, 0x64, 0x6b, 0x76,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x6b, 0x76, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x43,
	0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x2e, 0x64,
	0x6b, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x64, 0x6b, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x44, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x64, 0x6b, 0x76, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb4, 0x01, 0x0a, 0x0c, 0x44, 0x4b,
	0x56, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x47, 0x0a, 0x0c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x2e, 0x64, 0x6b, 0x76,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x64, 0x6b, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x5b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x2e, 0x64, 0x6b, 0x76, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x64, 0x6b, 0x76,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0x51, 0x0a, 0x10, 0x44, 0x4b, 0x56, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x18, 0x2e, 0x64, 0x6b, 0x76, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x66, 0x6c, 0x69, 0x70, 0x6b, 0x61, 0x72, 0x74, 0x2d, 0x69, 0x6e, 0x63, 0x75, 0x62,
	0x61, 0x74, 0x6f, 0x72, 0x2f, 0x64, 0x6b, 0x76, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_serverpb_admin_proto_rawDescOnce sync.Once
	file_pkg_serverpb_admin_proto_rawDescData = file_pkg_serverpb_admin_proto_rawDesc
)

func file_pkg_serverpb_admin_proto_rawDescGZIP() []byte {
	file_pkg_serverpb_admin_proto_rawDescOnce.Do(func() {
		file_pkg_serverpb_admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_serverpb_admin_proto_rawDescData)
	})
	return file_pkg_serverpb_admin_proto_rawDescData
}

var file_pkg_serverpb_admin_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pkg_serverpb_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_pkg_serverpb_admin_proto_goTypes = []interface{}{
	(RegionStatus)(0),              // 0: dkv.serverpb.RegionStatus
	(TrxnRecord_TrxnType)(0),       // 1: dkv.serverpb.TrxnRecord.TrxnType
	(*GetReplicasRequest)(nil),     // 2: dkv.serverpb.GetReplicasRequest
	(*GetReplicasResponse)(nil),    // 3: dkv.serverpb.GetReplicasResponse
	(*Replica)(nil),                // 4: dkv.serverpb.Replica
	(*GetChangesRequest)(nil),      // 5: dkv.serverpb.GetChangesRequest
	(*GetChangesResponse)(nil),     // 6: dkv.serverpb.GetChangesResponse
	(*ChangeRecord)(nil),           // 7: dkv.serverpb.ChangeRecord
	(*TrxnRecord)(nil),             // 8: dkv.serverpb.TrxnRecord
	(*BackupRequest)(nil),          // 9: dkv.serverpb.BackupRequest
	(*RestoreRequest)(nil),         // 10: dkv.serverpb.RestoreRequest
	(*ListNodesResponse)(nil),      // 11: dkv.serverpb.ListNodesResponse
	(*AddNodeRequest)(nil),         // 12: dkv.serverpb.AddNodeRequest
	(*RemoveNodeRequest)(nil),      // 13: dkv.serverpb.RemoveNodeRequest
	(*UpdateStatusRequest)(nil),    // 14: dkv.serverpb.UpdateStatusRequest
	(*GetClusterInfoRequest)(nil),  // 15: dkv.serverpb.GetClusterInfoRequest
	(*GetClusterInfoResponse)(nil), // 16: dkv.serverpb.GetClusterInfoResponse
	(*RegionInfo)(nil),             // 17: dkv.serverpb.RegionInfo
	nil,                            // 18: dkv.serverpb.ListNodesResponse.NodesEntry
	(*Status)(nil),                 // 19: dkv.serverpb.Status
	(*models.NodeInfo)(nil),        // 20: models.NodeInfo
	(*emptypb.Empty)(nil),          // 21: google.protobuf.Empty
}
var file_pkg_serverpb_admin_proto_depIdxs = []int32{
	4,  // 0: dkv.serverpb.GetReplicasResponse.replicas:type_name -> dkv.serverpb.Replica
	19, // 1: dkv.serverpb.GetChangesResponse.status:type_name -> dkv.serverpb.Status
	7,  // 2: dkv.serverpb.GetChangesResponse.changes:type_name -> dkv.serverpb.ChangeRecord
	8,  // 3: dkv.serverpb.ChangeRecord.trxns:type_name -> dkv.serverpb.TrxnRecord
	1,  // 4: dkv.serverpb.TrxnRecord.type:type_name -> dkv.serverpb.TrxnRecord.TrxnType
	19, // 5: dkv.serverpb.ListNodesResponse.status:type_name -> dkv.serverpb.Status
	18, // 6: dkv.serverpb.ListNodesResponse.nodes:type_name -> dkv.serverpb.ListNodesResponse.NodesEntry
	17, // 7: dkv.serverpb.UpdateStatusRequest.regionInfo:type_name -> dkv.serverpb.RegionInfo
	17, // 8: dkv.serverpb.GetClusterInfoResponse.regionInfos:type_name -> dkv.serverpb.RegionInfo
	0,  // 9: dkv.serverpb.RegionInfo.status:type_name -> dkv.serverpb.RegionStatus
	20, // 10: dkv.serverpb.ListNodesResponse.NodesEntry.value:type_name -> models.NodeInfo
	5,  // 11: dkv.serverpb.DKVReplication.GetChanges:input_type -> dkv.serverpb.GetChangesRequest
	4,  // 12: dkv.serverpb.DKVReplication.AddReplica:input_type -> dkv.serverpb.Replica
	4,  // 13: dkv.serverpb.DKVReplication.RemoveReplica:input_type -> dkv.serverpb.Replica
	2,  // 14: dkv.serverpb.DKVReplication.GetReplicas:input_type -> dkv.serverpb.GetReplicasRequest
	9,  // 15: dkv.serverpb.DKVBackupRestore.Backup:input_type -> dkv.serverpb.BackupRequest
	10, // 16: dkv.serverpb.DKVBackupRestore.Restore:input_type -> dkv.serverpb.RestoreRequest
	12, // 17: dkv.serverpb.DKVCluster.AddNode:input_type -> dkv.serverpb.AddNodeRequest
	13, // 18: dkv.serverpb.DKVCluster.RemoveNode:input_type -> dkv.serverpb.RemoveNodeRequest
	21, // 19: dkv.serverpb.DKVCluster.ListNodes:input_type -> google.protobuf.Empty
	14, // 20: dkv.serverpb.DKVDiscovery.UpdateStatus:input_type -> dkv.serverpb.UpdateStatusRequest
	15, // 21: dkv.serverpb.DKVDiscovery.GetClusterInfo:input_type -> dkv.serverpb.GetClusterInfoRequest
	21, // 22: dkv.serverpb.DKVDiscoveryNode.GetStatus:input_type -> google.protobuf.Empty
	6,  // 23: dkv.serverpb.DKVReplication.GetChanges:output_type -> dkv.serverpb.GetChangesResponse
	19, // 24: dkv.serverpb.DKVReplication.AddReplica:output_type -> dkv.serverpb.Status
	19, // 25: dkv.serverpb.DKVReplication.RemoveReplica:output_type -> dkv.serverpb.Status
	3,  // 26: dkv.serverpb.DKVReplication.GetReplicas:output_type -> dkv.serverpb.GetReplicasResponse
	19, // 27: dkv.serverpb.DKVBackupRestore.Backup:output_type -> dkv.serverpb.Status
	19, // 28: dkv.serverpb.DKVBackupRestore.Restore:output_type -> dkv.serverpb.Status
	19, // 29: dkv.serverpb.DKVCluster.AddNode:output_type -> dkv.serverpb.Status
	19, // 30: dkv.serverpb.DKVCluster.RemoveNode:output_type -> dkv.serverpb.Status
	11, // 31: dkv.serverpb.DKVCluster.ListNodes:output_type -> dkv.serverpb.ListNodesResponse
	19, // 32: dkv.serverpb.DKVDiscovery.UpdateStatus:output_type -> dkv.serverpb.Status
	16, // 33: dkv.serverpb.DKVDiscovery.GetClusterInfo:output_type -> dkv.serverpb.GetClusterInfoResponse
	17, // 34: dkv.serverpb.DKVDiscoveryNode.GetStatus:output_type -> dkv.serverpb.RegionInfo
	23, // [23:35] is the sub-list for method output_type
	11, // [11:23] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_pkg_serverpb_admin_proto_init() }
func file_pkg_serverpb_admin_proto_init() {
	if File_pkg_serverpb_admin_proto != nil {
		return
	}
	file_pkg_serverpb_api_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pkg_serverpb_admin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReplicasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_serverpb_admin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReplicasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_serverpb_admin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Replica); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_serverpb_admin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_serverpb_admin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChangesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_serverpb_admin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_serverpb_admin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrxnRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_serverpb_admin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_serverpb_admin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_serverpb_admin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_serverpb_admin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_serverpb_admin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_serverpb_admin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_serverpb_admin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_serverpb_admin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_serverpb_admin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pkg_serverpb_admin_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_pkg_serverpb_admin_proto_msgTypes[15].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_serverpb_admin_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_pkg_serverpb_admin_proto_goTypes,
		DependencyIndexes: file_pkg_serverpb_admin_proto_depIdxs,
		EnumInfos:         file_pkg_serverpb_admin_proto_enumTypes,
		MessageInfos:      file_pkg_serverpb_admin_proto_msgTypes,
	}.Build()
	File_pkg_serverpb_admin_proto = out.File
	file_pkg_serverpb_admin_proto_rawDesc = nil
	file_pkg_serverpb_admin_proto_goTypes = nil
	file_pkg_serverpb_admin_proto_depIdxs = nil
}
