# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import api_pb2 as pkg_dot_serverpb_dot_api__pb2


class DKVStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Put = channel.unary_unary(
                '/dkv.serverpb.DKV/Put',
                request_serializer=pkg_dot_serverpb_dot_api__pb2.PutRequest.SerializeToString,
                response_deserializer=pkg_dot_serverpb_dot_api__pb2.PutResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/dkv.serverpb.DKV/Delete',
                request_serializer=pkg_dot_serverpb_dot_api__pb2.DeleteRequest.SerializeToString,
                response_deserializer=pkg_dot_serverpb_dot_api__pb2.DeleteResponse.FromString,
                )
        self.Get = channel.unary_unary(
                '/dkv.serverpb.DKV/Get',
                request_serializer=pkg_dot_serverpb_dot_api__pb2.GetRequest.SerializeToString,
                response_deserializer=pkg_dot_serverpb_dot_api__pb2.GetResponse.FromString,
                )
        self.MultiGet = channel.unary_unary(
                '/dkv.serverpb.DKV/MultiGet',
                request_serializer=pkg_dot_serverpb_dot_api__pb2.MultiGetRequest.SerializeToString,
                response_deserializer=pkg_dot_serverpb_dot_api__pb2.MultiGetResponse.FromString,
                )
        self.MultiPut = channel.unary_unary(
                '/dkv.serverpb.DKV/MultiPut',
                request_serializer=pkg_dot_serverpb_dot_api__pb2.MultiPutRequest.SerializeToString,
                response_deserializer=pkg_dot_serverpb_dot_api__pb2.PutResponse.FromString,
                )
        self.Iterate = channel.unary_stream(
                '/dkv.serverpb.DKV/Iterate',
                request_serializer=pkg_dot_serverpb_dot_api__pb2.IterateRequest.SerializeToString,
                response_deserializer=pkg_dot_serverpb_dot_api__pb2.IterateResponse.FromString,
                )
        self.CompareAndSet = channel.unary_unary(
                '/dkv.serverpb.DKV/CompareAndSet',
                request_serializer=pkg_dot_serverpb_dot_api__pb2.CompareAndSetRequest.SerializeToString,
                response_deserializer=pkg_dot_serverpb_dot_api__pb2.CompareAndSetResponse.FromString,
                )


class DKVServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Put(self, request, context):
        """Put puts the given key into the key value store.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Delete deletes the given key from the key value store.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Get gets the value associated with the given key from the key value store.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MultiGet(self, request, context):
        """MultiGet gets the values associated with given keys from the key value store.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MultiPut(self, request, context):
        """MultiPut puts the given keys into the key value store.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Iterate(self, request, context):
        """Iterate iterates through the entire keyspace in no particular order and
        returns the results as a stream of key value pairs.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompareAndSet(self, request, context):
        """CompareAndSet offers the standard CAS style transaction over a given
        key. Intended to be used in concurrent workloads with less contention.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DKVServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Put': grpc.unary_unary_rpc_method_handler(
                    servicer.Put,
                    request_deserializer=pkg_dot_serverpb_dot_api__pb2.PutRequest.FromString,
                    response_serializer=pkg_dot_serverpb_dot_api__pb2.PutResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=pkg_dot_serverpb_dot_api__pb2.DeleteRequest.FromString,
                    response_serializer=pkg_dot_serverpb_dot_api__pb2.DeleteResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=pkg_dot_serverpb_dot_api__pb2.GetRequest.FromString,
                    response_serializer=pkg_dot_serverpb_dot_api__pb2.GetResponse.SerializeToString,
            ),
            'MultiGet': grpc.unary_unary_rpc_method_handler(
                    servicer.MultiGet,
                    request_deserializer=pkg_dot_serverpb_dot_api__pb2.MultiGetRequest.FromString,
                    response_serializer=pkg_dot_serverpb_dot_api__pb2.MultiGetResponse.SerializeToString,
            ),
            'MultiPut': grpc.unary_unary_rpc_method_handler(
                    servicer.MultiPut,
                    request_deserializer=pkg_dot_serverpb_dot_api__pb2.MultiPutRequest.FromString,
                    response_serializer=pkg_dot_serverpb_dot_api__pb2.PutResponse.SerializeToString,
            ),
            'Iterate': grpc.unary_stream_rpc_method_handler(
                    servicer.Iterate,
                    request_deserializer=pkg_dot_serverpb_dot_api__pb2.IterateRequest.FromString,
                    response_serializer=pkg_dot_serverpb_dot_api__pb2.IterateResponse.SerializeToString,
            ),
            'CompareAndSet': grpc.unary_unary_rpc_method_handler(
                    servicer.CompareAndSet,
                    request_deserializer=pkg_dot_serverpb_dot_api__pb2.CompareAndSetRequest.FromString,
                    response_serializer=pkg_dot_serverpb_dot_api__pb2.CompareAndSetResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dkv.serverpb.DKV', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DKV(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Put(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dkv.serverpb.DKV/Put',
            pkg_dot_serverpb_dot_api__pb2.PutRequest.SerializeToString,
            pkg_dot_serverpb_dot_api__pb2.PutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dkv.serverpb.DKV/Delete',
            pkg_dot_serverpb_dot_api__pb2.DeleteRequest.SerializeToString,
            pkg_dot_serverpb_dot_api__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dkv.serverpb.DKV/Get',
            pkg_dot_serverpb_dot_api__pb2.GetRequest.SerializeToString,
            pkg_dot_serverpb_dot_api__pb2.GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MultiGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dkv.serverpb.DKV/MultiGet',
            pkg_dot_serverpb_dot_api__pb2.MultiGetRequest.SerializeToString,
            pkg_dot_serverpb_dot_api__pb2.MultiGetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MultiPut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dkv.serverpb.DKV/MultiPut',
            pkg_dot_serverpb_dot_api__pb2.MultiPutRequest.SerializeToString,
            pkg_dot_serverpb_dot_api__pb2.PutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Iterate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/dkv.serverpb.DKV/Iterate',
            pkg_dot_serverpb_dot_api__pb2.IterateRequest.SerializeToString,
            pkg_dot_serverpb_dot_api__pb2.IterateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CompareAndSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dkv.serverpb.DKV/CompareAndSet',
            pkg_dot_serverpb_dot_api__pb2.CompareAndSetRequest.SerializeToString,
            pkg_dot_serverpb_dot_api__pb2.CompareAndSetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
